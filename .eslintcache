[{"/Users/olehyakubyshyn/Desktop/job/nodeJS learning/nodejs-project1-front/my-app/src/reportWebVitals.ts":"1","/Users/olehyakubyshyn/Desktop/job/nodeJS learning/nodejs-project1-front/my-app/src/store/configure/configureStore.ts":"2","/Users/olehyakubyshyn/Desktop/job/nodeJS learning/nodejs-project1-front/my-app/src/index.tsx":"3","/Users/olehyakubyshyn/Desktop/job/nodeJS learning/nodejs-project1-front/my-app/src/store/globals.ts":"4","/Users/olehyakubyshyn/Desktop/job/nodeJS learning/nodejs-project1-front/my-app/src/store/configure/rootMiddleware.ts":"5","/Users/olehyakubyshyn/Desktop/job/nodeJS learning/nodejs-project1-front/my-app/src/components/pages/AppPage/App.tsx":"6","/Users/olehyakubyshyn/Desktop/job/nodeJS learning/nodejs-project1-front/my-app/src/App.tsx":"7","/Users/olehyakubyshyn/Desktop/job/nodeJS learning/nodejs-project1-front/my-app/src/navigation/Router.tsx":"8","/Users/olehyakubyshyn/Desktop/job/nodeJS learning/nodejs-project1-front/my-app/src/service/api.js":"9","/Users/olehyakubyshyn/Desktop/job/nodeJS learning/nodejs-project1-front/my-app/src/service/apiConstants.ts":"10"},{"size":425,"mtime":1606165630163,"results":"11","hashOfConfig":"12"},{"size":456,"mtime":1606916646129,"results":"13","hashOfConfig":"12"},{"size":913,"mtime":1606919251365,"results":"14","hashOfConfig":"12"},{"size":107,"mtime":1606915729390,"results":"15","hashOfConfig":"12"},{"size":326,"mtime":1606916902798,"results":"16","hashOfConfig":"12"},{"size":3145,"mtime":1606927545479,"results":"17","hashOfConfig":"12"},{"size":205,"mtime":1606919445200,"results":"18","hashOfConfig":"12"},{"size":1121,"mtime":1606918247906,"results":"19","hashOfConfig":"12"},{"size":3969,"mtime":1611163771999,"results":"20","hashOfConfig":"12"},{"size":85,"mtime":1606926445149,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1luta7l",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/olehyakubyshyn/Desktop/job/nodeJS learning/nodejs-project1-front/my-app/src/reportWebVitals.ts",[],"/Users/olehyakubyshyn/Desktop/job/nodeJS learning/nodejs-project1-front/my-app/src/store/configure/configureStore.ts",[],["44","45"],"/Users/olehyakubyshyn/Desktop/job/nodeJS learning/nodejs-project1-front/my-app/src/index.tsx",[],"/Users/olehyakubyshyn/Desktop/job/nodeJS learning/nodejs-project1-front/my-app/src/store/globals.ts",[],"/Users/olehyakubyshyn/Desktop/job/nodeJS learning/nodejs-project1-front/my-app/src/store/configure/rootMiddleware.ts",[],"/Users/olehyakubyshyn/Desktop/job/nodeJS learning/nodejs-project1-front/my-app/src/components/pages/AppPage/App.tsx",["46"],"import React, {useState} from 'react';\nimport axios from 'axios';\nimport {RouteComponentProps} from 'react-router-dom';\nimport TextField from '@material-ui/core/TextField';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport Api from '../../../service/api';\n\nconst URL = 'http://localhost:3001';\n\ninterface AppPageProps extends RouteComponentProps {\n\n}\n\nfunction App(props: AppPageProps) {\n\n  const initialState = {\n    email: '',\n    password: '',\n    name: '',\n    age: '',\n    searchUserEmail: '',\n    loginEmail: '',\n    loginPassword: ''\n  };\n\n  let [state, setState] = useState(initialState);\n\n  const handleChange = (val: string, field: string) => {\n    console.log('val', val);\n\n    setState({\n      ...state,\n      [field]: val,\n    })\n  };\n\n  const handleSubmit = () => {\n    let headers = {\n      Accept: 'application/json',\n      'Content-Type': 'application/json; charset=utf-8',\n      'X-Requested-With': 'XMLHttpRequest',\n    };\n\n    const user = {\n      email: state.email,\n      password: state.password,\n      name: state.name,\n      age: state.age,\n    };\n\n    axios({\n      method: 'post',\n      headers,\n      url: `${URL}/sign-up`,\n      data: {user}\n    }).then((res) => {\n      console.log('SUCCESS', res);\n\n    });\n  };\n\n  const handleLogin = () => {\n    const data = {\n      email: state.loginEmail,\n      password: state.loginPassword,\n    };\n\n    Api.get('/login', data).then(res => {\n      console.log('SUCCESS', res);\n      alert('LOGIN SUCCESS');\n      localStorage.setItem('token', res.token)\n    });\n  };\n  //\n  const handleGetUserInfo = () => {\n    const data =  {\n      email: state.searchUserEmail\n    };\n\n    Api.get('/get-user', data).then(res => {\n      console.log('USER FETCHED', res);\n      alert('USER FETCHED');\n    });\n  };\n\n  console.log('state', state);\n\n  return (\n    <div>\n      <div >\n        <h1>SIGN UP</h1>\n      <TextField\n        label=\"Name\"\n        onChange={(val) => handleChange(val.target.value, 'name')}\n      />\n      <TextField\n        label=\"Age\"\n        onChange={(val) => handleChange(val.target.value, 'age')}\n      />\n      <TextField\n        label=\"Email\"\n        onChange={(val) => handleChange(val.target.value, 'email')}\n      />\n      <TextField\n        label=\"Password\"\n        onChange={(val) => handleChange(val.target.value, 'password')}\n      />\n\n      <Button\n        onClick={handleSubmit}\n      >\n        SignUp\n      </Button>\n      </div>\n      <h1>LOGIN</h1>\n\n      <TextField\n        label=\"Email\"\n        onChange={(val) => handleChange(val.target.value, 'loginEmail')}\n      />\n      <TextField\n        label=\"Password\"\n        onChange={(val) => handleChange(val.target.value, 'loginPassword')}\n      />\n      <Button\n        onClick={handleLogin}\n        color=\"primary\"\n      >\n        Log In\n      </Button>\n      <h1>GET USER</h1>\n      <TextField\n        label=\"Email\"\n        onChange={(val) => handleChange(val.target.value, 'searchUserEmail')}\n      />\n      <Button\n        onClick={handleGetUserInfo}\n        color=\"primary\"\n      >\n        Search\n      </Button>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/olehyakubyshyn/Desktop/job/nodeJS learning/nodejs-project1-front/my-app/src/App.tsx",[],"/Users/olehyakubyshyn/Desktop/job/nodeJS learning/nodejs-project1-front/my-app/src/navigation/Router.tsx",["47","48","49","50"],"/Users/olehyakubyshyn/Desktop/job/nodeJS learning/nodejs-project1-front/my-app/src/service/api.js",[],"/Users/olehyakubyshyn/Desktop/job/nodeJS learning/nodejs-project1-front/my-app/src/service/apiConstants.ts",[],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":5,"column":8,"nodeType":"57","messageId":"58","endLine":5,"endColumn":11},{"ruleId":"55","severity":1,"message":"59","line":2,"column":9,"nodeType":"57","messageId":"58","endLine":2,"endColumn":16},{"ruleId":"55","severity":1,"message":"60","line":3,"column":36,"nodeType":"57","messageId":"58","endLine":3,"endColumn":44},{"ruleId":"55","severity":1,"message":"61","line":11,"column":9,"nodeType":"57","messageId":"58","endLine":11,"endColumn":14},{"ruleId":"55","severity":1,"message":"62","line":12,"column":9,"nodeType":"57","messageId":"58","endLine":12,"endColumn":22},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"@typescript-eslint/no-unused-vars","'Box' is defined but never used.","Identifier","unusedVar","'connect' is defined but never used.","'Redirect' is defined but never used.","'token' is assigned a value but never used.","'loginedConfig' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]