[{"/Users/olehyakubyshyn/Desktop/job/repos/tenet-front/src/index.tsx":"1","/Users/olehyakubyshyn/Desktop/job/repos/tenet-front/src/App.tsx":"2","/Users/olehyakubyshyn/Desktop/job/repos/tenet-front/src/components/pages/AppPage/App.tsx":"3","/Users/olehyakubyshyn/Desktop/job/repos/tenet-front/src/service/api.ts":"4","/Users/olehyakubyshyn/Desktop/job/repos/tenet-front/src/service/apiConstants.ts":"5"},{"size":235,"mtime":1684844118813,"results":"6","hashOfConfig":"7"},{"size":182,"mtime":1684844028847,"results":"8","hashOfConfig":"7"},{"size":3652,"mtime":1684844028841,"results":"9","hashOfConfig":"7"},{"size":2139,"mtime":1684840768085,"results":"10","hashOfConfig":"7"},{"size":85,"mtime":1664200242917,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"pc5oxh",{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"/Users/olehyakubyshyn/Desktop/job/repos/tenet-front/src/index.tsx",[],"/Users/olehyakubyshyn/Desktop/job/repos/tenet-front/src/App.tsx",["24"],"/Users/olehyakubyshyn/Desktop/job/repos/tenet-front/src/components/pages/AppPage/App.tsx",["25","26","27"],"/Users/olehyakubyshyn/Desktop/job/repos/tenet-front/src/service/api.ts",["28","29","30","31","32","33","34","35","36","37","38","39"],"import axios, {Method} from 'axios';\nimport {DOMAIN_URI, API_URI} from './apiConstants';\nimport {KeyValModel} from \"../models/global.model\";\n\nexport default class Api {\n  static methods = {\n    GET: 'get',\n    POST: 'post',\n    PATCH: 'patch',\n    PUT: 'put',\n    DELETE: 'delete',\n  };\n\n  static composeRouteUrl(route: string) {\n    if (route.startsWith('http')) {\n      return route;\n    }\n    return `${DOMAIN_URI}${API_URI}${route}`;\n  }\n\n  static get(route: string, params: KeyValModel, appendHeaders?: KeyValModel, newHeaders?: KeyValModel) {\n    return Api.request(\n      route,\n      params,\n      undefined,\n      'get',\n      appendHeaders,\n      newHeaders,\n    );\n  }\n\n  static put(route: string, params: KeyValModel | undefined, data: any) {\n    return Api.request(route, params, data, 'put');\n  }\n\n  static patch(route: string, params: KeyValModel | undefined, data: any) {\n    return Api.request(route, params, data, 'PATCH');\n  }\n\n  static post(route: string, data: any, appendHeaders?: KeyValModel, newHeaders?: KeyValModel) {\n    return Api.request(\n      route,\n      undefined,\n      data,\n      'post',\n      appendHeaders,\n      newHeaders,\n    );\n  }\n\n  static delete(route: string, params: KeyValModel, data: any) {\n    return Api.request(route, params, data, 'DELETE');\n  }\n\n  static request(route: string, params: KeyValModel | undefined, data: any, method: Method, appendHeaders?: KeyValModel, newHeaders?: KeyValModel) {\n    const url = Api.composeRouteUrl(route);\n    let headers: KeyValModel = {\n      Accept: 'application/json',\n      'Content-Type': 'application/json; charset=utf-8',\n      'X-Requested-With': 'XMLHttpRequest',\n    };\n\n    const token = localStorage.getItem('token');\n\n    if (token) {\n      headers.Authorization = `Bearer ${token}`;\n    }\n\n    if (appendHeaders) {\n      headers = {...headers, ...appendHeaders};\n    }\n\n    if (newHeaders) {\n      headers = newHeaders;\n    }\n\n    return axios({\n      method,\n      url,\n      headers,\n      params,\n      data,\n    })\n      .then((resp) => {\n        return resp.data;\n      })\n      .catch((err) => {\n        throw err;\n      });\n  }\n}\n",[],"/Users/olehyakubyshyn/Desktop/job/repos/tenet-front/src/service/apiConstants.ts",[],{"ruleId":"40","severity":1,"message":"41","line":4,"column":17,"nodeType":"42","messageId":"43","endLine":4,"endColumn":22},{"ruleId":"40","severity":1,"message":"41","line":8,"column":1,"nodeType":"44","messageId":"43","endLine":8,"endColumn":19},{"ruleId":"45","severity":1,"message":"46","line":48,"column":34,"nodeType":"47","messageId":"48","endLine":48,"endColumn":37},{"ruleId":"45","severity":1,"message":"49","line":72,"column":11,"nodeType":"47","messageId":"48","endLine":72,"endColumn":14},{"ruleId":"40","severity":1,"message":"41","line":14,"column":3,"nodeType":"50","messageId":"43","endLine":14,"endColumn":40},{"ruleId":"40","severity":1,"message":"41","line":21,"column":3,"nodeType":"50","messageId":"43","endLine":21,"endColumn":104},{"ruleId":"40","severity":1,"message":"41","line":32,"column":3,"nodeType":"50","messageId":"43","endLine":32,"endColumn":72},{"ruleId":"40","severity":1,"message":"51","line":32,"column":62,"nodeType":"47","messageId":"52","endLine":32,"endColumn":71},{"ruleId":"40","severity":1,"message":"41","line":36,"column":3,"nodeType":"50","messageId":"43","endLine":36,"endColumn":74},{"ruleId":"40","severity":1,"message":"51","line":36,"column":64,"nodeType":"47","messageId":"52","endLine":36,"endColumn":73},{"ruleId":"40","severity":1,"message":"41","line":40,"column":3,"nodeType":"50","messageId":"43","endLine":40,"endColumn":95},{"ruleId":"40","severity":1,"message":"51","line":40,"column":30,"nodeType":"47","messageId":"52","endLine":40,"endColumn":39},{"ruleId":"40","severity":1,"message":"41","line":51,"column":3,"nodeType":"50","messageId":"43","endLine":51,"endColumn":63},{"ruleId":"40","severity":1,"message":"51","line":51,"column":53,"nodeType":"47","messageId":"52","endLine":51,"endColumn":62},{"ruleId":"40","severity":1,"message":"41","line":55,"column":3,"nodeType":"50","messageId":"43","endLine":55,"endColumn":147},{"ruleId":"40","severity":1,"message":"51","line":55,"column":66,"nodeType":"47","messageId":"52","endLine":55,"endColumn":75},"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","FunctionDeclaration","@typescript-eslint/no-unused-vars","'res' is defined but never used.","Identifier","unusedVar","'res' is assigned a value but never used.","FunctionExpression","Argument 'data' should be typed with a non-any type.","anyTypedArg"]